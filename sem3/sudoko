#include <stdio.h>

#define SIZE 9

void print_grid(int grid[SIZE][SIZE]) {
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            printf("%d ", grid[i][j]);
        }
        printf("\n");
    }
}

int is_valid(int grid[SIZE][SIZE], int row, int col, int num) {
    for (int i = 0; i < SIZE; i++) {
        if (grid[row][i] == num) return 0;
        if (grid[i][col] == num) return 0;
    }
    return 1;
}

int solve(int grid[SIZE][SIZE], int row, int col) {
    if (row == SIZE - 1 && col == SIZE) return 1;
    if (col == SIZE) {
        row++;
        col = 0;
    }
    if (grid[row][col]!= 0) return solve(grid, row, col + 1);
    for (int i = 1; i <= SIZE; i++) {
        if (is_valid(grid, row, col, i)) {
            grid[row][col] = i;
            if (solve(grid, row, col + 1)) return 1;
            grid[row][col] = 0;
        }
    }
    return 0;
}

int main() {
    int grid[SIZE][SIZE] = {
        {5, 3, 0, 0, 7, 0, 0, 0, 0},
        {6, 0, 0, 1, 9, 5, 0, 0, 0},
        {0, 9, 8, 0, 0, 0, 0, 6, 0},
        {8, 0, 0, 0, 6, 0, 0, 0, 3},
        {4, 0, 0, 8, 0, 3, 0, 0, 1},
        {7, 0, 0, 0, 2, 0, 0, 0, 6},
        {0, 6, 0, 0, 0, 0, 2, 8, 0},
        {0, 0, 0, 4, 1, 9, 0, 0, 5},
        {0, 0, 0, 0, 8, 0, 0, 7, 9}
    };

    printf("Initial Grid:\n");
    print_grid(grid);

    if (solve(grid, 0, 0)) {
        printf("Solved Grid:\n");
        print_grid(grid);
    } else {
        printf("No solution exists\n");
    }

    return 0;
}
